function f() {
 HEAP8[x >> 0];
 HEAP8[(x & MASK0) + 1 >> 0];
 HEAP8[(x & MASK0) + 2 >> 0];
 HEAP8[(x + 1 & MASK0) + 2 >> 0];
 HEAP8[(x + 2 & MASK0) + 2 >> 0];
 HEAP8[(x + 1 + y & MASK0) + 2 >> 0];
 HEAP8[(x + 2 + y & MASK0) + 2 >> 0];
 x();
 HEAP16[x >> 1];
 HEAP16[x + 1 >> 1];
 HEAP16[(x & MASK1) + 2 >> 1];
 HEAP16[(x + 1 & MASK1) + 2 >> 1];
 HEAP16[(x + 2 & MASK1) + 2 >> 1];
 HEAP16[(x + 1 + y & MASK1) + 2 >> 1];
 HEAP16[(x + 2 + y & MASK1) + 2 >> 1];
 HEAP16[(x + 1 + y & MASK1) + 4 >> 1];
 HEAP16[(x + 2 + y & MASK1) + 4 >> 1];
 HEAP16[(x + 1 + y & MASK1) + 4 >> 1];
 HEAP16[(x + 4 + y & MASK1) + 2 >> 1];
 x();
 HEAP32[x >> 2];
 HEAP32[x + 1 >> 2];
 HEAP32[x + 2 >> 2];
 HEAP32[x + 3 >> 2];
 HEAP32[(x & MASK2) + 4 >> 2];
 HEAP32[(x + 1 & MASK2) + 4 >> 2];
 HEAP32[(x + 4 & MASK2) + 4 >> 2];
 HEAP32[(x + 1 + y & MASK2) + 4 >> 2];
 HEAP32[(x + 4 + y & MASK2) + 4 >> 2];
 HEAP32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAP32[(x + 4 + y & MASK2) + 8 >> 2];
 HEAP32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAP32[(x + 8 + y & MASK2) + 4 >> 2];
 x();
 HEAPU32[x >> 2];
 HEAPU32[x + 1 >> 2];
 HEAPU32[(x & MASK2) + 4 >> 2];
 HEAPU32[(x + 1 & MASK2) + 4 >> 2];
 HEAPU32[(x + 4 & MASK2) + 4 >> 2];
 HEAPU32[(x + 1 + y & MASK2) + 4 >> 2];
 HEAPU32[(x + 4 + y & MASK2) + 4 >> 2];
 HEAPU32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAPU32[(x + 4 + y & MASK2) + 8 >> 2];
 HEAPU32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAPU32[(x + 8 + y & MASK2) + 4 >> 2];
 x();
 HEAPF32[x >> 2];
 HEAPF32[x + 1 >> 2];
 HEAPF32[(x & MASK2) + 4 >> 2];
 HEAPF32[(x + 1 & MASK2) + 4 >> 2];
 HEAPF32[(x + 4 & MASK2) + 4 >> 2];
 HEAPF32[(x + 1 + y & MASK2) + 4 >> 2];
 HEAPF32[(x + 4 + y & MASK2) + 4 >> 2];
 HEAPF32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAPF32[(x + 4 + y & MASK2) + 8 >> 2];
 HEAPF32[(x + 1 + y & MASK2) + 8 >> 2];
 HEAPF32[(x + 8 + y & MASK2) + 4 >> 2];
 x();
 HEAPF64[x >> 3];
 HEAPF64[x + 1 >> 3];
 HEAPF64[(x & MASK3) + 8 >> 3];
 HEAPF64[(x + 1 & MASK3) + 8 >> 3];
 HEAPF64[(x + 8 & MASK3) + 8 >> 3];
 HEAPF64[(x + 1 + y & MASK3) + 8 >> 3];
 HEAPF64[(x + 8 + y & MASK3) + 8 >> 3];
 HEAPF64[(x + 1 + y & MASK3) + 16 >> 3];
 HEAPF64[(x + 8 + y & MASK3) + 16 >> 3];
 HEAPF64[(x + 1 + y & MASK3) + 16 >> 3];
 HEAPF64[(x + 16 + y & MASK3) + 8 >> 3];
}

